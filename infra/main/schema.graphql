# GraphQL Schema for eMenu
enum SubscriptionPlan {
  BASIC
  PREMIUM
}

enum OrderStatus {
  ONGOING
  CHECKOUT
}

enum Role {
  boss
  waiter
  demo
  admin
}

type User {
  id: ID!              # save the sub of cognito user
  email: String!
  role: Role! 
  restaurantId: ID
}

type Restaurant {
  id: ID!
  name: String!
  image: String
  address: String
  bossId: ID!
  subscriptionPlan: SubscriptionPlan
  subscriptionExpiry: AWSDateTime
}

type Dish {
  id: ID!
  name: String!
  description: String
  price: Int!
  image: String!
  dishTypeId: ID!
  restaurantId: ID!
  dishType: DishType                     #support nested query
}

type DishType {
  id: ID!
  title: String!
  alias: String
  restaurantId: ID
}

type Query {
  getRestaurant(id: ID!): Restaurant
  getUser(id: ID!): User
  listDishes: [Dish]
  listDishTypes: [DishType]
}

type Mutation {
  createRestaurant(input: CreateRestaurantInput!): Restaurant
  updateRestaurant(id: ID!, input: UpdateRestaurantInput!): Restaurant
}

input CreateRestaurantInput {
  name: String!
  image: String
  address: String
}

input UpdateRestaurantInput {
  name: String
  image: String
  address: String
}

schema {
  query: Query
  mutation: Mutation
}